% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bookme.R
\name{bookme}
\alias{bookme}
\title{Wrapper of \code{bookdown::render_book}, running it in input_dir}
\usage{
bookme(
  input_dir,
  input_files = "*",
  output_dir = NULL,
  output_format = NULL,
  preview = FALSE
)
}
\arguments{
\item{input_dir}{the main directory of the book}

\item{input_files}{character vector with input files, in case you do not
want to render them all (the default)}

\item{output_dir}{The output directory. If \code{NULL}, a field named
\code{output_dir} in the configuration file \file{_bookdown.yml} will be
used (possibly not specified, either, in which case a directory name
\file{_book} will be used).}

\item{preview}{Whether to render and preview the input files specified by the
\code{input} argument. Previewing a certain chapter may save compilation
time as you actively work on this chapter, but the output may not be
accurate (e.g. cross-references to other chapters will not work).}
}
\value{
character vector with the path to the output
}
\description{
\code{bookdown::render_book} renders "multiple R Markdown files
under the current working directory into a book".
TODO: it seems this restriction will be lifted in the next \code{bookdown} release
so let's see when it is out and adjust here as necessary
That is, IMHO, unfortunate. In particular, when the book
is not in the root of your project, you would have to mess with
\code{setwd()} or the like and \code{{here}} won't help you either.
This function works around this issue by leveraging \code{xfun::in_dir}
to run \code{bookdown::render_book} in the \code{input_dir} of your choice.
Then we do not have to deal ourselves with \code{setwd()} and changing it back.
}
\details{
In addition, the function calls \code{base::shell} to try and open the book in the
default viewer for the output
}
\examples{
\dontrun{
bookme("report")
}
}
